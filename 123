import pandas as pd
import re

input_file = "ascii_table.txt"
output_file = "vulnerability_report.xlsx"

def is_probably_table_line(line):
    # Accept lines with multiple columns separated by | OR 2+ spaces OR tabs
    line = line.strip()
    return (
        ('|' in line and not re.fullmatch(r'[\s\|\+\-]+', line)) or
        ('\t' in line) or
        (len(re.split(r'\s{2,}', line)) >= 3)  # 2+ spaces
    )

def read_table_lines(file_path):
    with open(file_path, "r", encoding="utf-8") as f:
        lines = f.readlines()

    table_lines = [line.strip() for line in lines if is_probably_table_line(line)]
    
    if not table_lines:
        print("❌ Still no usable table lines found.")
        return []

    print(f"✅ Found {len(table_lines)} possible table rows.")
    return table_lines

def split_columns(line):
    if '|' in line:
        return [c.strip() for c in line.split('|') if c.strip()]
    elif '\t' in line:
        return [c.strip() for c in line.split('\t') if c.strip()]
    else:
        return [c.strip() for c in re.split(r'\s{2,}', line) if c.strip()]

def parse_table(lines):
    headers = []
    data_rows = []
    current_row = []

    for line in lines:
        cols = split_columns(line)

        if not headers:
            headers = cols
            print(f"✅ Headers: {headers}")
            continue

        if len(cols) < len(headers):
            for i in range(len(cols)):
                current_row[i] += f", {cols[i]}"
        else:
            if current_row:
                data_rows.append(current_row)
            current_row = cols

    if current_row:
        data_rows.append(current_row)

    return headers, data_rows

lines = read_table_lines(input_file)
if not lines:
    exit()

headers, rows = parse_table(lines)
rows = [row + [""] * (len(headers) - len(row)) for row in rows]

df = pd.DataFrame(rows, columns=headers)
df.to_excel(output_file, index=False)

print(f"\n✅ Excel file saved: {output_file}")
print(df.head())
