import pandas as pd
import re

# === CONFIG ===
input_file = "ascii_table.txt"
output_file = "vulnerability_report.xlsx"

# === STEP 1: Read Lines and Filter Table Rows ===
def read_table_lines(file_path):
    with open(file_path, "r", encoding="utf-8") as f:
        lines = f.readlines()

    table_lines = []
    for line in lines:
        if "|" in line and not re.fullmatch(r'[\s\|\+\-]+', line.strip()):
            table_lines.append(line.strip('\n'))

    return table_lines

# === STEP 2: Parse Clean Columns and Handle Multi-Line Rows ===
def parse_table(table_lines):
    headers = []
    data_rows = []
    current_row = []

    for line in table_lines:
        # Extract all columns between pipes
        cols = [c.strip() for c in line.split('|')]

        # First valid row is the header
        if not headers:
            headers = [h for h in cols if h]
            continue

        # If number of columns is less than headers, treat it as continuation
        cleaned_cols = [c for c in cols if c != '']
        if len(cleaned_cols) < len(headers):
            for i in range(len(cleaned_cols)):
                if cleaned_cols[i]:
                    current_row[i] += f", {cleaned_cols[i]}"
        else:
            if current_row:
                data_rows.append(current_row)
            current_row = cleaned_cols

    if current_row:
        data_rows.append(current_row)

    return headers, data_rows

# === STEP 3: Run Everything ===
lines = read_table_lines(input_file)
headers, rows = parse_table(lines)

# Normalize rows (pad missing columns)
max_cols = len(headers)
normalized_rows = [row + [""] * (max_cols - len(row)) for row in rows]

# === STEP 4: Write to Excel ===
df = pd.DataFrame(normalized_rows, columns=headers)
df.to_excel(output_file, index=False)
print(f"\nâœ… DONE! File saved as: {output_file}")
